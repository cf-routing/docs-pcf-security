---
title: Loggregator Network Communications
owner: Loggregator
---

This topic describes Loggregator internal network communication paths with other <%= vars.app_runtime_full %> (<%= vars.app_runtime_abbr %>) components.

For more information about Loggregator components and architecture, see [Loggregator Components and Architecture](https://docs.pivotal.io/application-service/<%= product_info['local_product_version'].to_s.sub('.','-') %>/loggregator/architecture.html).


## <a id="loggregator"></a> Loggregator Communications

The following table lists network communication paths for Loggregator. These paths use the TCP transport layer protocol.

<table>
  <tr>
    <th>
      Source VM
      </th>
    <th>
      Destination VM
    </th>
    <th>
        Port
    </th>
    <th>
        App Layer Protocol
    </th>
    <th>
        Security and Authentication
    </th>
    </tr>
    <tr>
      <td>
        Any&#42;
      </td>
      <td>
        loggregator_trafficcontroller
      </td>
      <td>
        8081
      </td>
      <td>
        HTTP/WebSocket
      </td>
      <td>
        OAuth
      </td>
      </tr>
      <tr>
        <td>
          Any VM running Metron
          </td>
          <td>
            doppler
          </td>
          <td>
            8082
          </td>
          <td>
            gRPC over HTTP/2
          </td>
          <td>
            Mutual TLS
          </td>
          </tr>
          <tr>
            <td>
              loggregator_trafficcontroller
              </td>
              <td>
                doppler
              </td>
              <td>
                8082
              </td>
              <td>
                gRPC over HTTP/2
              </td>
              <td>
                Mutual TLS
              </td>
              </tr>
              <tr>
                <td>
                  loggregator_trafficcontroller
                </td>
                <td>
                  uaa
                </td>
                <td>
                  8443
                </td>
                <td>
                  HTTPS
                </td>
                <td>
                  TLS
                </td>
                </tr>
                <tr>
                  <td>
                    loggregator_trafficcontroller
                  </td>
                  <td>
                    cloud_controller
                  </td>
                  <td>
                    9023
                  </td>
                  <td>
                    HTTPS
                  </td>
                  <td>
                    Mutual TLS
                  </td>
                  </tr>
                  <tr>
                    <td>
                      loggregator_trafficcontroller (Reverse Log Proxy)
                    </td>
                    <td>
                      doppler
                    </td>
                    <td>
                      8082
                    </td>
                    <td>
                    gRPC over HTTP/2
                    </td>
                    <td>
                      Mutual TLS
                    </td>
                    </tr>
                    <tr>
                      <td>
                      Any&#42;
                      </td>
                      <td>
                      loggregator_trafficcontroller (<%= vars.app_runtime_abbr %> authentication proxy)
                      </td>
                      <td>
                        8083
                      </td>
                      <td>
                        HTTP
                      </td>
                      <td>
                        OAuth
                      </td>
                      </tr>
                      <tr>
                        <td>
                        loggregator_trafficcontroller (Route Registrar)
                        </td>
                        <td>
                          nats
                        </td>
                        <td>
                          4222
                        </td>
                        <td>
                          NATS
                        </td>
                        <td>
                          Basic authentication
                        </td>
                        </tr>
                        <tr>
                        <td>
                          loggregator_trafficcontroller (Metrics Forwarder)
                        </td>
                        <td>
                          BOSH Director (Metrics Server)
                        </td>
                        <td>
                          25555 and 8443
                        </td>
                        <td>
                          gRPC over HTTP/2
                        </td>
                        <td>
                          Mutual TLS
                        </td>
                        </tr>
                        <tr>
                        <td>
                          loggregator_trafficcontroller
                        </td>
                        <td>
                          doppler (Log Cache)
                        </td>
                        <td>
                          8080
                        </td>
                        <td>
                          gRPC over HTTP/2
                        </td>
                        <td>
                          Mutual TLS
                        </td>
                        </tr>
                        <tr>
                        <td>
                          loggregator_trafficcontroller (Reverse Log Proxy Gateway)
                        </td>
                        <td>
                          cloud_controller
                        </td>
                        <td>
                          9023
                        </td>
                        <td>
                          HTTPS
                        </td>
                        <td>
                          Mutual TLS
                        </td>
                        </tr>
                        <tr>
                        <td>
                          Any&#42;
                        </td>
                        <td>
                          loggregator_trafficcontroller (Reverse Log Proxy Gateway)
                        </td>
                        <td>
                          8088
                        </td>
                        <td>
                          HTTP/Server Sent Events
                        </td>
                        <td>
                          OAuth
                        </td>
                        </tr>
                        </table>

<sup>&#42;</sup>Any source VM can send requests to the specified destination within its subnet.

<sup>&#42;&#42;</sup>Any host configured through a user-provided service binding with a syslog URL.

<sup>&#42;&#42;&#42;</sup>Any port configured through a user-provided service binding with syslog URL.

<sup>&#42;&#42;&#42;&#42;</sup>Basic authentication only supported for HTTPS syslog drains.


## <a id="log-cache"></a> Log Cache Communications

The following table lists network communication paths for Log Cache:

| Source VM | Destination VM | Port | Transport Layer Protocol | App Layer Protocol | Security and Authentication |
| --------- | -------------- | ---- | ------------------------ | ------------------ | ---------------------------- |
| loggregator_trafficcontroller (Reverse Log Proxy) | log-cache (Nozzle) | 8082 | TCP | gRPC over HTTP/2 | Mutual TLS |
| Any&#42; | log-cache | 8080 | TCP | gRPC over HTTP/2 | Mutual TLS |
| gorouter | log-cache (Auth Proxy) | 8083 | TCP | HTTP | OAuth |
| log-cache (Auth Proxy) | uaa | 8443 | TCP | HTTPS | TLS |
| log-cache (Auth Proxy) | cloud_controller | 9024 | TCP | HTTPS | TLS |

<sup>&#42;</sup>Any source VM can send requests to the specified destination within its subnet.

<%= partial "bosh-dns" %>
